#gallery.ui.section.js-content
  - if show_page_media_filters?(local_assigns.fetch(:filterable, true))
    -#
      .uk-text-center{ class: "uk-hidden@m" }
        %ul.uk-subnav.uk-subnav-pill
          %li
            = link_to(t(:filter_by_medium_any_item),
              page_media_path(page_id: @page.id, subcategory: nil, license: @license, resource_id: @resource_id),
              remote: true, class: "item#{ @subcategory.nil? ? " uk-active" : ""}")
          - Medium.subcategories.each do |sc_name, sc_id|
            - next if sc_name == "js_map"
            %li= link_to(t("medium.subcategories.#{sc_name}"), page_media_path(page_id: @page.id, license: @license, subcategory: sc_id, resource_id: @resource_id),
              remote: true, class: "item#{ sc_id == @subcategory ? " uk-active" : ""}")

    -#
      .ui.menu.uk-text-small{ class: "uk-visible@m js-media-menus" }
    .ui.menu.uk-text-small{ class: "js-menus" }
      - if @license_groups && @license_groups.length > 1
        .ui.dropdown.item
          - if @license_group
            %b= @license_group.label
          - else
            = t(:filter_by_license)
          %i.dropdown.icon
          .menu
            = link_to(t(:filter_by_license_any_item),
              page_media_path(page_id: @page.id, license: nil, subcategory: @subcategory, resource_id: @resource_id),
                data: { type: 'html' }, class: "item#{ @license_group.nil? ? " active" : ""}")
            -#
              - License.types.each do |lic|
            - @license_groups.sort { |a, b| a.label.downcase <=> b.label.downcase }.each do |grp|
              = link_to(grp.label, page_media_path(page_id: @page.id, license_group: grp.key, subcategory: @subcategory, resource_id: @resource_id),
                data: { type: 'html' }, class: "item#{ grp == @license_group ? " active" : ""}")
      - if @subcategories && @subcategories.length > 1
        .ui.dropdown.item
          - if @subcategory
            %b= t("medium.subcategories.#{@subcategory}")
          - else
            = t(:filter_by_medium_subtype)
          %i.dropdown.icon
          .menu
            = link_to(t(:filter_by_medium_any_item),
              page_media_path(page_id: @page.id, subcategory: nil, license: @license, resource_id: @resource_id),
              data: { type: 'html' }, class: "item#{ @subcategory.nil? ? " active" : ""}")
            -#
              - Medium.subcategories.each do |sc_name, sc_id|
            - @subcategories.each do |sc|
              = link_to(t("medium.subcategories.#{sc}"), page_media_path(page_id: @page.id, license: @license, subcategory: sc, resource_id: @resource_id),
                data: { type: 'html' }, class: "item#{ sc == @subcategory ? " active" : ""}")
      - if @resources && @resources.length > 1
        .ui.dropdown.item
          - if @resource
            %b= @resource.name
          - else
            = t(:filter_by_resource)
          %i.dropdown.icon
          .menu.uk-height-medium.uk-overflow-auto
            = link_to(t(:filter_by_resource_any_item),
              page_media_path(page_id: @page.id, subcategory: @subcategory, license_group: @license_group&.key, resource_id: nil),
                data: { type: 'html' }, class: "item#{ @resource.nil? ? " active" : ""}")
            - @resources.each do |resource|
              = link_to(resource.name, page_media_path(page_id: @page.id, license_group: @license_group&.key, subcategory: @subcategory, resource_id: resource.id),
                data: { type: 'html' }, class: "item#{ resource.id == @resource_id ? " active" : ""}")
  - total_pages = (@media_count.to_f / @media_page_size).ceil
  %div{ class: "uk-visible@m" }
    = paginate @media, total_pages: total_pages
  -# If you want the list to be sortable:
  -# %ul.uk-child-width-1-6.uk-grid-small{ uk: { grid: true, sortable: "handle: .uk-sortable-handle" } }
  = render("media/grid", media: @media, page: @page)
  -# TODO: remote isn't working. I don't have time to figure out why, right now.
  -# = paginate @media, remote: true, total_pages: total_pages
  = paginate @media, total_pages: total_pages
