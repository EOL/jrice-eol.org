- summary = @page.cached_summary

- if @page.medium
  = render :partial => "hero", :locals => { :class_name => "hero-before" }
.l-flex
  %div{ :class => (@page.medium ? "l-left-col" : "l-overview-full") }
    - if summary.value.present? || @page.has_data?
      .desc
        - if summary.value.present?
          %p= summary.value.html_safe
          - summary.terms.each do |term|
            - if term.term
              = render "terms/desc_meta", term: term.term, predicate: term.predicate, toggle: term.toggle_selector, source: term.source, search_link: true
        - if @page.has_data?
          - if @page.key_data.any?
            - attributes_key = "eol_has_data_for_n_attributes_including_html"
          - else
            - attributes_key = "eol_has_data_for_n_attributes_html"

          %p= t(".#{attributes_key}", :count => @page.predicate_count, data_path: page_data_path(@page))
    -if @key_data.any?
      %ul.sample-traits
        - @key_data.sort_by { |k, v| k.name || 'zzz' }.each do |predicate, trait|
          %li
            %div
              .sample-trait-key.a= predicate.i18n_name
              = render partial: "terms/desc_meta", locals: { term: predicate, search_link: true }
            %div
              - val = trait_display_value(trait, page_is_assoc_obj: predicate.inverse_only?).html_safe
              - can_render_page = predicate.inverse_only? ? trait.page : trait.object_page
              - if can_render_page
                - page_id_for_url = predicate.inverse_only? ? trait.page.id : trait.object_page.id
                - url = page_path(page_id_for_url)
                = link_to val, url, :class => "sample-trait-val"
              - elsif trait.object_term
                .sample-trait-val.a= val
                = render partial: "terms/desc_meta", locals: { term: trait.object_term, search_link: true, predicate: predicate }
              - else
                .sample-trait-val= val

    - if @page.occurrence_map?
      .map-contain-overview-section
        = render partial: "json_map", locals: { extra_class: "map-contain-overview" }


  - if @page.medium || @show_habitat_chart
    .l-right-col
      - if @page.medium
        = render :partial => "hero", :locals => { :class_name => "hero-after" }
      - if @show_habitat_chart
        .page-habitat-chart.page-habitat-chart-right.uk-margin-top
          = render "shared/data_viz_contain", query: @habitat_chart_query, type: :bar, header: t("traits.data_viz.page_habitat_header", name: @page.name.singularize.titlecase), description: t("traits.data_viz.page_habitat_explanation", name: @page.name)
      
.l-overview-full
  - if @show_habitat_chart
    .uk-margin-top.page-habitat-chart.page-habitat-chart-left
      = render "shared/data_viz_contain", query: @habitat_chart_query, type: :bar, header: t("traits.data_viz.page_habitat_header", name: @page.name), description: t("traits.data_viz.page_habitat_explanation", name: @page.name)
  - if @show_trophic_web
    .trophic-web-contain-overview.js-trophic-web-remote-contain{ :'data-load-path' => page_trophic_web_path(@page)}
      = render "shared/centered_spinner"
  = render('pages/children')

