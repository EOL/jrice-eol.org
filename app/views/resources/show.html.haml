.uk-section
  %h1.uk-article-title
    = @resource.name
    .uk-text-small= "(#{@resource.abbr})"
  - if is_admin?
    -# TODO: if we choose to lop off import of traits again in the future, resurrect this. Keeping it here so we
    -# remember we have the I18n translation for it!
    -# .ui.basic.button
    -#   = link_to(t("resources.actions.import_traits"), resource_import_traits_path(@resource))
    .ui.basic.button
      = link_to(t("resources.actions.reindex"), resource_reindex_path(@resource))
    .ui.basic.button
      = link_to(t("resources.actions.fix_no_names"), resource_fix_no_names_path(@resource))
    - if ImportLog.exists?(resource_id: @resource.id, completed_at: nil, failed_at: nil)
      .ui.red.inverted.button
        [publishing now]
    - else
      .ui.red.inverted.button
        = link_to(t("resources.actions.diff"), resource_diff_path(@resource))
      .ui.red.inverted.button
        = link_to(t("resources.actions.republish"), resource_republish_path(@resource),
          data: { confirm: t("resources.actions.republish_confirm") })
      .ui.red.inverted.button
        = link_to(t("resources.actions.clean_republish"), resource_clean_republish_path(@resource),
          data: { confirm: t("resources.actions.clean_republish_confirm") })
  %p
    - if @resource.description.blank?
      There is no description for this resource.
    - else
      = @resource.description

  - if @resource.import_logs.empty?
    %p This resource has not been imported yet.
  - else
    %h2 Content
    %p
      %ul.uk-subnav
        %li= link_to(t("resources.actions.index"), resources_path)
        %li= link_to('see harvests', "#{Rails.application.secrets.repository[:url]}/resources/#{@resource.repository_id}")
        %li= link_to("browse #{number_with_delimiter(@resource.nodes.count)} nodes", resource_nodes_path(@resource))

    .uk-section.uk-section-small
      %ul#page_nav.uk-grid-large{ class: 'uk-child-width-1-2@s uk-child-width-1-6@m', uk: { grid: true } }
        %li
          - @resource.update_attribute(:nodes_count, @resource.nodes.count) if @resource.nodes_count.to_i != @resource.nodes.count
          - index_stat(:nodes, @resource.nodes_count)
        %li
          - index_stat(:media, Medium.where(resource_id: @resource.id).count)
        %li
          - index_stat(:data, TraitBank::Queries.count_by_resource(@resource.id))
        %li
          - index_stat(:scientific_names, ScientificName.where(resource_id: @resource.id).count)
        %li
          - index_stat(:references, Reference.where(resource_id: @resource.id).count)

  %h2
    Publish Logs:
  %ul.uk-list
    - @resource.import_logs.order('created_at DESC').each do |log|
      %li
        %b= link_to(l(log.created_at.in_time_zone, format: :long), [@resource, log])
        - if log.completed_at
          %b= "Completed:"
          = l(log.completed_at.in_time_zone, format: '%H:%M:%S.%3N')
        - elsif log.failed_at
          %b= "Failed:"
          = l(log.failed_at.in_time_zone, format: '%H:%M:%S.%3N')
        %b= "Status:"
        - if log.status
          = log.status
        - else
          = "unknown"
