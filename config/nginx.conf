# NOTE: yes, root. This is a docker container, permissions are secondary.
user root root;

events {
	worker_connections 5000;
}

http {
	# Basic Settings
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	types_hash_max_size 4096;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# SSL Settings
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

  server {
    listen 8000;
    server_name localhost;
    # ~2 seconds is often enough for most folks to parse HTML/CSS and
    # retrieve needed images/icons/frames, connections are cheap in
    # nginx so increasing this is generally safe...
    keepalive_timeout 90;
    # path for static files
    root /app/public;
    
    location / {
      proxy_pass http://app:3000;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      # If the file exists as a static file serve it directly without running all the other rewrite tests on it
      if (-f $request_filename) {
        break;
      }
    }

    # Now this supposedly should work as it gets the filenames with querystrings that Rails provides.
    # BUT there's a chance it could break the ajax calls.
    location ~* \.(ico|css|gif|jpe?g|png|js)(\?[0-9]+)?$ {
      expires max;
      break;
    }

    # Error pages
    # error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /app/current/public;
    }
  }
}